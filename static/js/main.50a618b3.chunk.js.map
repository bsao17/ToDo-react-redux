{"version":3,"sources":["features/toDo/toDoSlice.js","components/form/Form.js","components/showingList/ShowingList.js","components/actionBar/addItem/AddItem.js","App.js","app/store.js","index.js","components/actionBar/addItem/addItem.module.scss"],"names":["toDoSlice","createSlice","name","initialState","items","toggleForm","reducers","addItem","state","action","push","payload","removeItem","filter","st","showingForm","actions","id","Form","dispatch","useDispatch","ref","useRef","useEffect","current","focus","className","onSubmit","data","value","date","Date","toLocaleString","task","htmlFor","type","ShowingList","selector","useSelector","console","log","toDoItems","map","todo","item","AddItem","styleActionToDo","container","more","onClick","completed","App","useState","listTitle","setListTitle","titleRef","onChange","placeholder","toggleDisplayForm","inputRef","store","configureStore","reducer","toDoReducer","getState","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.50a618b3.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    toggleForm: false\r\n}\r\n\r\nexport const toDoSlice = createSlice({\r\n    name: \"toDo\",\r\n    initialState,\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            state.items.push(action.payload)\r\n        },\r\n        removeItem: (state, action) => {\r\n            state.items.filter((st) => {\r\n                return st.items !== action.payload\r\n            })\r\n        },\r\n        showingForm: (state, action) => {\r\n            state.toggleForm = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addItem, removeItem, showingForm} = toDoSlice.actions\r\nexport default toDoSlice.reducer\r\n","import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addItem, showingForm} from \"../../features/toDo/toDoSlice\";\r\n\r\n// Init Id\r\nlet id = 0\r\n\r\nfunction Form() {\r\n    const dispatch = useDispatch()\r\n    const ref = useRef(\"\")\r\n    const onSubmit = (data) => {\r\n        dispatch(showingForm(false))\r\n        dispatch(addItem({\r\n            id: ++id,\r\n            date: new Date().toLocaleString(),\r\n            task: data\r\n        }))\r\n    }\r\n    // Field focus\r\n    useEffect(() => {\r\n        ref.current.focus()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className={\"card card-body\"}>\r\n                <form className={\" d-flex flex-column\"} onSubmit={() => {\r\n                    onSubmit(ref.current.value)\r\n                }}>\r\n                    <label className={\"fw-bold text-center h3\"} htmlFor=\"newTask\">Complete List</label>\r\n                    <input ref={ref} type=\"text\" className={\"form-control text-center my-2\"}/>\r\n                    <input className={\"btn btn-success my-2\"} type=\"submit\" value={\"Add New Item\"}/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nfunction ShowingList() {\r\n    const selector = useSelector((state) => {\r\n        console.log(state.toDoItems.items)\r\n        return state.toDoItems.items\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={\"m-5 p-2 overflow-scroll\"} id={\"container\"}>\r\n            <h3\r\n                className={\"text-light fw-bold bg-dark d-flex flex-row justify-content-center mb-2 p-2 rounded align-items-center\"}>\r\n                <div className={\"mx-5\"}>Content</div>\r\n            </h3>\r\n            <div className={\"d-flex flex-column justify-content-lg-around mx-5\"}>{selector.map((todo) => {\r\n                return (\r\n                    <div key={todo.id}>\r\n                        <div className={\"d-flex justify-content-between align-items-center \"}>\r\n                            <code className={\"h5 fw-bold mx-5\"}>{todo.id} </code>\r\n                            <h5 key={todo.item}>{todo.task}</h5>\r\n                            <input type=\"checkbox\" />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowingList","import React from 'react';\r\nimport styleActionToDo from \"./addItem.module.scss\"\r\nimport Form from \"../../form/Form\";\r\nimport ShowingList from \"../../showingList/ShowingList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { addItem, removeItem, showingForm } from \"../../../features/toDo/toDoSlice\";\r\n\r\nfunction AddItem() {\r\n    const selector = useSelector((state) => {\r\n        return state.toDoItems.toggleForm\r\n    })\r\n    const dispatch = useDispatch()\r\n    console.log(selector)\r\n    return (\r\n        <div>\r\n            {selector ? <Form/> : <ShowingList/>}\r\n            <section className={styleActionToDo.container}>\r\n                <button className={styleActionToDo.more} onClick={() => {\r\n                    dispatch(showingForm(true))\r\n                }}> +\r\n                </button>\r\n                <button className={styleActionToDo.completed}>Completed</button>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddItem;","import React, {useRef, useState} from \"react\"\nimport './App.scss';\nimport AddItem from \"./components/actionBar/addItem/AddItem\";\nimport {showingForm} from \"./features/toDo/toDoSlice\";\nimport {useDispatch} from \"react-redux\";\n\nfunction App() {\n    const [displayForm, setDisplayForm] = useState(false)\n    const [listTitle, setListTitle] = useState(\"Title List\")\n    const titleRef = useRef(null)\n    const dispatch = useDispatch()\n\n    function toggleDisplayForm() {\n        setDisplayForm(!displayForm)\n    }\n\n    function inputFocus(item) {\n        item.current.focus()\n    }\n\n    function changeTitle() {\n        setListTitle(titleRef.current.value)\n        console.log(titleRef, listTitle)\n    }\n\n\n    return (\n        <div className=\"App card card-body\">\n            <h1 className={\n                \"fw-bold text-center p-2\" +\n                \"  w-50 mx-auto mt-2 text-dark\"\n            } id={\"title\"}>\n                {listTitle}\n            </h1>\n            <input ref={titleRef} className={'w-25 mx-auto bg-light'} type=\"text\" onChange={() => {\n                changeTitle()\n            }} id={'title'} placeholder={'Choose your Title List'}/>\n\n            <AddItem toggleDisplayForm={dispatch(showingForm)} inputRef={inputFocus}/>\n        </div>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport toDoReducer from \"../features/toDo/toDoSlice\"\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        toDoItems: toDoReducer\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/store\";\n\nconsole.log(store.getState())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completed\":\"addItem_completed__3qyO-\",\"container\":\"addItem_container__PG8qI\",\"more\":\"addItem_more__UEulk\",\"search\":\"addItem_search__GKLL_\"};"],"sourceRoot":""}